# OK detect crs type (2 or 32)
# OK detect number of channels
read pulse counter BEFORE stop
multithreading transfer
check if Decode is not overlapped for different cbacks (threads?)

cnt_prev - check counter consistency
also use Counter and cnt for consistency check

Class - data, pulses etc...

Reset

# OK limits of parameters

# OK save/read parameters

check chan for each 2byte or 8byte data (crs2 or crs32)

# OKOK make flip-flop buffers for Bevents

# ??OK?? join all threads at exit

simulate too long pulse in readpulse2 (return 2)

make DoReset/greset() - detect crs, clear everything

# ?? set chanPresent for open files (no module)

make colors in crspardlg

# OK calculate data rate instantly (between subsequent buffers), not as integral

clean obsolete variables

write/read durWr[],preWr[] for each raw .gz file additionally to toptions
/or split toptions into two varibles:
opt1, opt2 - with fixed and non-fixed structures

implement dock/undock - see e.g. tutorials/eve

make different buf sizes for usb and readfile (now it's the same)

PulseClass::FindPeaks() -> check pileup part...